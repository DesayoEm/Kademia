"""renamed soft delete columns to archive

Revision ID: 0f8f305651f3
Revises: 21230b35b6a5
Create Date: 2025-02-03 22:37:22.937948

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from V2.app.database.models.common_imports import Base
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0f8f305651f3'
down_revision: Union[str, None] = '21230b35b6a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('classes', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('classes', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('classes', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('classes', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('classes_soft_deleted_by_fkey', 'classes', type_='foreignkey')
    op.create_foreign_key(None, 'classes', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('classes', 'deletion_reason')
    op.drop_column('classes', 'soft_deleted_at')
    op.drop_column('classes', 'soft_deleted_by')
    op.drop_column('classes', 'is_soft_deleted')
    op.add_column('departments', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('departments', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('departments', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('departments', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('departments_soft_deleted_by_fkey', 'departments', type_='foreignkey')
    op.create_foreign_key(None, 'departments', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('departments', 'deletion_reason')
    op.drop_column('departments', 'soft_deleted_at')
    op.drop_column('departments', 'soft_deleted_by')
    op.drop_column('departments', 'is_soft_deleted')
    op.add_column('educator_qualifications', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('educator_qualifications', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('educator_qualifications', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('educator_qualifications', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('educator_qualifications_soft_deleted_by_fkey', 'educator_qualifications', type_='foreignkey')
    op.create_foreign_key(None, 'educator_qualifications', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('educator_qualifications', 'deletion_reason')
    op.drop_column('educator_qualifications', 'soft_deleted_at')
    op.drop_column('educator_qualifications', 'soft_deleted_by')
    op.drop_column('educator_qualifications', 'is_soft_deleted')
    op.add_column('grades', sa.Column('is_archived', sa.Boolean(), nullable=False))
    op.add_column('grades', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('grades', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('grades', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('grades_soft_deleted_by_fkey', 'grades', type_='foreignkey')
    op.create_foreign_key(None, 'grades', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('grades', 'deletion_reason')
    op.drop_column('grades', 'soft_deleted_at')
    op.drop_column('grades', 'soft_deleted_by')
    op.drop_column('grades', 'is_soft_deleted')
    op.add_column('parents', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('parents', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('parents', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('parents', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_index('idx_parents_soft_deleted_at', table_name='parents')
    op.create_index('idx_parents_archived_at', 'parents', ['archived_at'], unique=False)
    op.drop_constraint('parents_soft_deleted_by_fkey', 'parents', type_='foreignkey')
    op.create_foreign_key(None, 'parents', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('parents', 'deletion_reason')
    op.drop_column('parents', 'soft_deleted_at')
    op.drop_column('parents', 'soft_deleted_by')
    op.drop_column('parents', 'is_soft_deleted')
    op.add_column('repetitions', sa.Column('is_archived', sa.Boolean(), nullable=False))
    op.add_column('repetitions', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('repetitions', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('repetitions', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('repetitions_soft_deleted_by_fkey', 'repetitions', type_='foreignkey')
    op.create_foreign_key(None, 'repetitions', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('repetitions', 'deletion_reason')
    op.drop_column('repetitions', 'soft_deleted_at')
    op.drop_column('repetitions', 'soft_deleted_by')
    op.drop_column('repetitions', 'is_soft_deleted')
    op.add_column('staff', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('staff', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('staff', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('staff', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_index('idx_staff_soft_deleted_at', table_name='staff')
    op.create_index('idx_staff_archived_at', 'staff', ['archived_at'], unique=False)
    op.drop_constraint('staff_soft_deleted_by_fkey', 'staff', type_='foreignkey')
    op.create_foreign_key(None, 'staff', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('staff', 'deletion_reason')
    op.drop_column('staff', 'soft_deleted_at')
    op.drop_column('staff', 'soft_deleted_by')
    op.drop_column('staff', 'is_soft_deleted')
    op.add_column('staff_departments', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('staff_departments', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('staff_departments', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('staff_departments', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('staff_departments_soft_deleted_by_fkey', 'staff_departments', type_='foreignkey')
    op.create_foreign_key(None, 'staff_departments', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('staff_departments', 'deletion_reason')
    op.drop_column('staff_departments', 'soft_deleted_at')
    op.drop_column('staff_departments', 'soft_deleted_by')
    op.drop_column('staff_departments', 'is_soft_deleted')
    op.add_column('staff_roles', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('staff_roles', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('staff_roles', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('staff_roles', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('staff_roles_soft_deleted_by_fkey', 'staff_roles', type_='foreignkey')
    op.create_foreign_key(None, 'staff_roles', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('staff_roles', 'deletion_reason')
    op.drop_column('staff_roles', 'soft_deleted_at')
    op.drop_column('staff_roles', 'soft_deleted_by')
    op.drop_column('staff_roles', 'is_soft_deleted')
    op.add_column('student_documents', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('student_documents', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('student_documents', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('student_documents', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('student_documents_soft_deleted_by_fkey', 'student_documents', type_='foreignkey')
    op.create_foreign_key(None, 'student_documents', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('student_documents', 'deletion_reason')
    op.drop_column('student_documents', 'soft_deleted_at')
    op.drop_column('student_documents', 'soft_deleted_by')
    op.drop_column('student_documents', 'is_soft_deleted')
    op.add_column('student_subjects', sa.Column('is_archived', sa.Boolean(), nullable=False))
    op.add_column('student_subjects', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('student_subjects', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('student_subjects', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('student_subjects_soft_deleted_by_fkey', 'student_subjects', type_='foreignkey')
    op.create_foreign_key(None, 'student_subjects', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('student_subjects', 'deletion_reason')
    op.drop_column('student_subjects', 'soft_deleted_at')
    op.drop_column('student_subjects', 'soft_deleted_by')
    op.drop_column('student_subjects', 'is_soft_deleted')
    op.add_column('student_transfers', sa.Column('is_archived', sa.Boolean(), nullable=False))
    op.add_column('student_transfers', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('student_transfers', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('student_transfers', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('student_transfers_soft_deleted_by_fkey', 'student_transfers', type_='foreignkey')
    op.create_foreign_key(None, 'student_transfers', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('student_transfers', 'deletion_reason')
    op.drop_column('student_transfers', 'soft_deleted_at')
    op.drop_column('student_transfers', 'soft_deleted_by')
    op.drop_column('student_transfers', 'is_soft_deleted')
    op.add_column('students', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('students', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('students', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('students', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_index('idx_students_soft_deleted_at', table_name='students')
    op.create_index('idx_students_archived_at', 'students', ['archived_at'], unique=False)
    op.drop_constraint('students_soft_deleted_by_fkey', 'students', type_='foreignkey')
    op.create_foreign_key(None, 'students', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('students', 'deletion_reason')
    op.drop_column('students', 'soft_deleted_at')
    op.drop_column('students', 'soft_deleted_by')
    op.drop_column('students', 'is_soft_deleted')
    op.add_column('subjects', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('subjects', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('subjects', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('subjects', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('subjects_soft_deleted_by_fkey', 'subjects', type_='foreignkey')
    op.create_foreign_key(None, 'subjects', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('subjects', 'deletion_reason')
    op.drop_column('subjects', 'soft_deleted_at')
    op.drop_column('subjects', 'soft_deleted_by')
    op.drop_column('subjects', 'is_soft_deleted')
    op.add_column('total_grades', sa.Column('is_archived', sa.Boolean(), nullable=False))
    op.add_column('total_grades', sa.Column('archived_at', sa.DateTime(), nullable=True))
    op.add_column('total_grades', sa.Column('archive_reason', sa.String(length=500), nullable=True))
    op.add_column('total_grades', sa.Column('archived_by', sa.UUID(), nullable=True))
    op.drop_constraint('total_grades_soft_deleted_by_fkey', 'total_grades', type_='foreignkey')
    op.create_foreign_key(None, 'total_grades', 'staff', ['archived_by'], ['id'], ondelete='SET NULL')
    op.drop_column('total_grades', 'deletion_reason')
    op.drop_column('total_grades', 'soft_deleted_at')
    op.drop_column('total_grades', 'soft_deleted_by')
    op.drop_column('total_grades', 'is_soft_deleted')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('total_grades', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('total_grades', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('total_grades', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('total_grades', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'total_grades', type_='foreignkey')
    op.create_foreign_key('total_grades_soft_deleted_by_fkey', 'total_grades', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('total_grades', 'archived_by')
    op.drop_column('total_grades', 'archive_reason')
    op.drop_column('total_grades', 'archived_at')
    op.drop_column('total_grades', 'is_archived')
    op.add_column('subjects', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('subjects', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('subjects', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('subjects', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'subjects', type_='foreignkey')
    op.create_foreign_key('subjects_soft_deleted_by_fkey', 'subjects', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('subjects', 'archived_by')
    op.drop_column('subjects', 'archive_reason')
    op.drop_column('subjects', 'archived_at')
    op.drop_column('subjects', 'is_archived')
    op.add_column('students', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('students', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('students', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('students', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_foreign_key('students_soft_deleted_by_fkey', 'students', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_index('idx_students_archived_at', table_name='students')
    op.create_index('idx_students_soft_deleted_at', 'students', ['soft_deleted_at'], unique=False)
    op.drop_column('students', 'archived_by')
    op.drop_column('students', 'archive_reason')
    op.drop_column('students', 'archived_at')
    op.drop_column('students', 'is_archived')
    op.add_column('student_transfers', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('student_transfers', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('student_transfers', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('student_transfers', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'student_transfers', type_='foreignkey')
    op.create_foreign_key('student_transfers_soft_deleted_by_fkey', 'student_transfers', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('student_transfers', 'archived_by')
    op.drop_column('student_transfers', 'archive_reason')
    op.drop_column('student_transfers', 'archived_at')
    op.drop_column('student_transfers', 'is_archived')
    op.add_column('student_subjects', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('student_subjects', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('student_subjects', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('student_subjects', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'student_subjects', type_='foreignkey')
    op.create_foreign_key('student_subjects_soft_deleted_by_fkey', 'student_subjects', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('student_subjects', 'archived_by')
    op.drop_column('student_subjects', 'archive_reason')
    op.drop_column('student_subjects', 'archived_at')
    op.drop_column('student_subjects', 'is_archived')
    op.add_column('student_documents', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('student_documents', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('student_documents', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('student_documents', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'student_documents', type_='foreignkey')
    op.create_foreign_key('student_documents_soft_deleted_by_fkey', 'student_documents', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('student_documents', 'archived_by')
    op.drop_column('student_documents', 'archive_reason')
    op.drop_column('student_documents', 'archived_at')
    op.drop_column('student_documents', 'is_archived')
    op.add_column('staff_roles', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('staff_roles', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('staff_roles', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('staff_roles', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'staff_roles', type_='foreignkey')
    op.create_foreign_key('staff_roles_soft_deleted_by_fkey', 'staff_roles', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('staff_roles', 'archived_by')
    op.drop_column('staff_roles', 'archive_reason')
    op.drop_column('staff_roles', 'archived_at')
    op.drop_column('staff_roles', 'is_archived')
    op.add_column('staff_departments', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('staff_departments', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('staff_departments', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('staff_departments', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'staff_departments', type_='foreignkey')
    op.create_foreign_key('staff_departments_soft_deleted_by_fkey', 'staff_departments', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('staff_departments', 'archived_by')
    op.drop_column('staff_departments', 'archive_reason')
    op.drop_column('staff_departments', 'archived_at')
    op.drop_column('staff_departments', 'is_archived')
    op.add_column('staff', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('staff', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('staff', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('staff', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'staff', type_='foreignkey')
    op.create_foreign_key('staff_soft_deleted_by_fkey', 'staff', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_index('idx_staff_archived_at', table_name='staff')
    op.create_index('idx_staff_soft_deleted_at', 'staff', ['soft_deleted_at'], unique=False)
    op.drop_column('staff', 'archived_by')
    op.drop_column('staff', 'archive_reason')
    op.drop_column('staff', 'archived_at')
    op.drop_column('staff', 'is_archived')
    op.add_column('repetitions', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('repetitions', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('repetitions', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('repetitions', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'repetitions', type_='foreignkey')
    op.create_foreign_key('repetitions_soft_deleted_by_fkey', 'repetitions', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('repetitions', 'archived_by')
    op.drop_column('repetitions', 'archive_reason')
    op.drop_column('repetitions', 'archived_at')
    op.drop_column('repetitions', 'is_archived')
    op.add_column('parents', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('parents', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('parents', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('parents', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'parents', type_='foreignkey')
    op.create_foreign_key('parents_soft_deleted_by_fkey', 'parents', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_index('idx_parents_archived_at', table_name='parents')
    op.create_index('idx_parents_soft_deleted_at', 'parents', ['soft_deleted_at'], unique=False)
    op.drop_column('parents', 'archived_by')
    op.drop_column('parents', 'archive_reason')
    op.drop_column('parents', 'archived_at')
    op.drop_column('parents', 'is_archived')
    op.add_column('grades', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('grades', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('grades', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('grades', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.create_foreign_key('grades_soft_deleted_by_fkey', 'grades', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('grades', 'archived_by')
    op.drop_column('grades', 'archive_reason')
    op.drop_column('grades', 'archived_at')
    op.drop_column('grades', 'is_archived')
    op.add_column('educator_qualifications', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('educator_qualifications', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('educator_qualifications', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('educator_qualifications', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'educator_qualifications', type_='foreignkey')
    op.create_foreign_key('educator_qualifications_soft_deleted_by_fkey', 'educator_qualifications', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('educator_qualifications', 'archived_by')
    op.drop_column('educator_qualifications', 'archive_reason')
    op.drop_column('educator_qualifications', 'archived_at')
    op.drop_column('educator_qualifications', 'is_archived')
    op.add_column('departments', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('departments', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('departments', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('departments', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'departments', type_='foreignkey')
    op.create_foreign_key('departments_soft_deleted_by_fkey', 'departments', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('departments', 'archived_by')
    op.drop_column('departments', 'archive_reason')
    op.drop_column('departments', 'archived_at')
    op.drop_column('departments', 'is_archived')
    op.add_column('classes', sa.Column('is_soft_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('classes', sa.Column('soft_deleted_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('deletion_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'classes', type_='foreignkey')
    op.create_foreign_key('classes_soft_deleted_by_fkey', 'classes', 'staff', ['soft_deleted_by'], ['id'], ondelete='SET NULL')
    op.drop_column('classes', 'archived_by')
    op.drop_column('classes', 'archive_reason')
    op.drop_column('classes', 'archived_at')
    op.drop_column('classes', 'is_archived')
    # ### end Alembic commands ###
