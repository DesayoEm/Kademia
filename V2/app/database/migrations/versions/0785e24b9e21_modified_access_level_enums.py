"""modified access level enums

Revision ID: 0785e24b9e21
Revises: cf89c196b864
Create Date: 2025-01-22 02:13:11.360585

"""
from typing import Sequence, Union
from sqlalchemy import Enum
from alembic import op
import sqlalchemy as sa
from V2.app.database.models.common_imports import Base


# revision identifiers, used by Alembic.
revision: str = '0785e24b9e21'
down_revision: Union[str, None] = 'cf89c196b864'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

old_enum = ('User', 'Admin', 'Superuser', 'Superadmin')
new_enum = ('Inactive', 'User', 'Admin', 'Superuser', 'System')

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE accesslevel RENAME TO old_accesslevel")
    op.execute("CREATE TYPE accesslevel AS ENUM" + str(new_enum))

    op.execute ("ALTER TABLE users ALTER COLUMN access_level TYPE accesslevel USING access_level::text::accesslevel")
    op.execute ("ALTER TABLE access_level_changes ALTER COLUMN previous_level TYPE accesslevel USING previous_level::text::accesslevel")
    op.execute ("ALTER TABLE access_level_changes ALTER COLUMN new_level TYPE accesslevel USING new_level::text::accesslevel")

    op.execute("DROP TYPE old_accesslevel")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE accesslevel RENAME TO accesslevel_old")
    op.execute("CREATE TYPE accesslevel AS ENUM " + str(old_enum))

    op.execute("ALTER TABLE users ALTER COLUMN access_level TYPE accesslevel USING access_level::text::accesslevel")
    op.execute("ALTER TABLE access_level_changes ALTER COLUMN previous_level TYPE accesslevel USING previous_level::text::accesslevel")
    op.execute("ALTER TABLE access_level_changes ALTER COLUMN new_level TYPE accesslevel USING new_level::text::accesslevel")

    op.execute("DROP TYPE old_accesslevel")
    # ### end Alembic commands ###
